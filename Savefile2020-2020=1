
#findwhereRisextractingfrom
getwd()

#install ADD package 
install.packages('lmerTest')
library(lmerTest)
install.packages('emmeans')
library(emmeans)
if(!require(mosaic)){install.packages("mosaic")}
library(mosaic)
if(!require(tidyverse)){install.packages("tidyverse")}
library(tidyverse)
if(!require(broom)){install.packages("broom")}
library(broom)
install.packages('devtools')
library(devtools)
if(!require(drc)){install.packages("drc")}
library(drc)
if(!require(nlme)){install.packages("nlme")}
library(nlme)
if(!require(rcompanion)){install.packages("rcompanion")}
if(!require(FSA)){install.packages("FSA")}
if(!require(rcompanion)){install.packages("rcompanion")}
if(!require(FSA)){install.packages("FSA")}
if(!require(psych)){install.packages("psych")}
library(rcompanion)
library(FSA)
library(psych)

#if error in read, double checj WD
setwd("C:/Users/16512/Desktop/ADD Calc")
getwd()

#readtempdatacsv,T meanslinesgrabbingaretrue
x=read.csv('2020Tempdata/2020 TEMP DATA.csv', header=T)
#returntopmostportionofdata
head(x)
#database is searched by R when evaluating a variable, so objects in database can be accessed by simply giving their names 
attach(x)
#AddsecondADDpackagewithbasetemps
if(!require(pollen)){install.packages("pollen")}
library(pollen)

#MINTEMPOF-11.7FORYEAR

GDDMINTWELVE=gdd(tmax=MAX, tmin=MIN, tbase=-12,tbase_max=100)
GDDMINELEVEN=gdd(tmax=MAX, tmin=MIN, tbase=-11,tbase_max=100)
GDDMINTEN=gdd(tmax=MAX, tmin=MIN, tbase=-10,tbase_max=100)
GDDMINNINE=gdd(tmax=MAX, tmin=MIN, tbase=-9,tbase_max=100)
GDDMINEIGHT=gdd(tmax=MAX, tmin=MIN, tbase=-8,tbase_max=100)
GDDMINSEVEN=gdd(tmax=MAX, tmin=MIN, tbase=-7,tbase_max=100)
GDDMINSIX=gdd(tmax=MAX, tmin=MIN, tbase=-6,tbase_max=100)
GDDMINFIVE=gdd(tmax=MAX, tmin=MIN, tbase=-5,tbase_max=100)
GDDMINFOUR=gdd(tmax=MAX, tmin=MIN, tbase=-4,tbase_max=100)
GDDMINTHREE=gdd(tmax=MAX, tmin=MIN, tbase=-3,tbase_max=100)
GDDMINTWO=gdd(tmax=MAX, tmin=MIN, tbase=-2,tbase_max=100)
GDDMINONE=gdd(tmax=MAX, tmin=MIN, tbase=-1,tbase_max=100)
GDDZERO=gdd(tmax=MAX, tmin=MIN, tbase=0,tbase_max=100)
GDDONE=gdd(tmax=MAX, tmin=MIN, tbase=1,tbase_max=100)
GDDTWO=gdd(tmax=MAX, tmin=MIN, tbase=2,tbase_max=100)
GDDTHREE=gdd(tmax=MAX, tmin=MIN, tbase=3,tbase_max=100)
GDDFOUR=gdd(tmax=MAX, tmin=MIN, tbase=4,tbase_max=100)
GDDFIVE=gdd(tmax=MAX, tmin=MIN, tbase=5,tbase_max=100)
GDDSIX=gdd(tmax=MAX, tmin=MIN, tbase=6,tbase_max=100)
GDDSEVEN=gdd(tmax=MAX, tmin=MIN, tbase=7,tbase_max=100)


#findbaseof 0 value 

GDDZERO

#fromlow100tohigh100, create a inc by 5 sequence

ADDincfive <- seq(from = 6356, to= 6556, by = 5)

###functionstart###

#setupfilelocation

folder <- "2020Tempdata/"

#createfunction

ADDlogtest <- function(var, name){
  
  #definevariableforfunction
  
  TS2<- var
  
  ##41 different values of ADD from base 6456
  
  for(i in 1:41){
    thresholdresult <- TS2> ADDincfive[i]
    
    #changetocharactertofind"true"
    
    threshchar <- as.character(thresholdresult)
    
    #change sequencenametoTSEQfor 
    
    TSEQ <- ADDincfive[i]
    if (TRUE %in% threshchar){
      TSEQ <- as.character(TSEQ)
      fileB<-paste(folder, name, TSEQ, ".csv", sep="")
      write.csv(thresholdresult, fileB)
    }
  }
}
#startfunctioncalc 

{ ADDlogtest(GDDMINTWELVE, "ANEGTWELVE")
  ADDlogtest(GDDMINELEVEN, "BNEGELEVEN")
  ADDlogtest(GDDMINTEN, "CNEGTEN")
  ADDlogtest(GDDMINNINE, "DNEGNINE")
  ADDlogtest(GDDMINEIGHT, "ENEGEIGHT")
  ADDlogtest(GDDMINSEVEN,"FNEGSEVEN")
  ADDlogtest(GDDMINSIX,"GNEGSIX")
  ADDlogtest(GDDMINFIVE,"HNEGFIVE")
  ADDlogtest(GDDMINFOUR,"INEGFOUR")
  ADDlogtest(GDDMINTHREE,"JNEGTHREE")
  ADDlogtest(GDDMINTWO,"KNEGTWO")
  ADDlogtest(GDDMINONE,"LNEGONE")
  ADDlogtest(GDDZERO,"MNEGZERO")
  ADDlogtest(GDDONE,"NONE")
  ADDlogtest(GDDTWO,"OTWO")
  ADDlogtest(GDDTHREE,"PTHREE")
  ADDlogtest(GDDFOUR,"QFOUR")}
  
   


##startlinearregression 

gddzero2 <- Matrix(GDDZERO, nrow = 365, ncol= 1)


##make vector for specific calender days 
ADDlin2 <- c(31, 61, 92, 122, 153, 184, 214, 245, 275, 306, 337, 365)

###makeemptyvector
Calcum2020result <- c()

##return ADD values of calender 
for(i in 1:12){
  L2 <- ADDlin2[i]
  Calcum2020result <- print( gddzero2 [L2,])
}

##read the cumulative ADD values for each month in the document
y2=read.csv('2020Tempdata/DD 2020-2021.csv', header=TRUE)

##check everything is there
View(y2)

##download regression packages 

if(!require(rcompanion)){install.packages("rcompanion")}
library(rcompanion)
if(!require(car)){install.packages("car")}
library(car)

attach(y2)


##begin test

{LOGADD=glm(CODE~ADD, family=binomial)
  nagelkerke(LOGADD)}

##look at nagelkerke and p value 
##create matrix for new threshold 


gddzero4 <-Matrix(GDDMINFIVE , nrow = 365, ncol= 1)


##make vector for specific calender days 
ADDlin4<- c(31, 61, 92, 122, 153, 184, 214, 245, 275, 306, 337, 365)

###makeemptyvector
Calcum2020resultNEW<- c()

##return ADD values of calender 
for(i in 1:12){
  L4<- ADDlin4[i]
  Calcum2020resultNEW<- print( gddzero4 [L4,])}

